generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  uuid            String    @unique
  email           String    @unique
  password        String
  description     String?
  firstname       String
  lastname        String
  username        String    @unique
  followers       Int       @default(0)
  following       Int       @default(0)
  picture         String    @default("https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Unknown_person.jpg/434px-Unknown_person.jpg")
  backgroundImage String    @default("https://4kwallpapers.com/images/wallpapers/macos-big-sur-colorful-waves-smooth-stock-apple-aesthetic-5k-5120x2880-1495.jpg")
  likes           String[]
  newUser         Boolean   @default(false)
  viewTrending    Boolean   @default(false)
  Article         Article[]
  Post            Post[]
  Comment         Comment[]
}

model Post {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  creatorId    String    @db.ObjectId
  creatorName  String
  creatorPhoto String
  date         DateTime? @default(now())
  content      String
  images       String[]
  comments     Int?      @default(0)
  likes        Int?      @default(0)
  shares       Int?      @default(0)

  creator User      @relation(fields: [creatorId], references: [id])
  Comment Comment[]
}

model Comment {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  postId       String    @db.ObjectId
  creatorId    String    @db.ObjectId
  content      String
  creatorImage String
  creatorName  String
  createdAt    DateTime? @default(now())
  Image        String?

  creator User @relation(fields: [creatorId], references: [id])
  post    Post @relation(fields: [postId], references: [id])
}

model Article {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  creatorId    String @db.ObjectId
  creatorName  String
  creatorPhoto String
  content      String
  price        Float

  creator User @relation(fields: [creatorId], references: [id])
}
